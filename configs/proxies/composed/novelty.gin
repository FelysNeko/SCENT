novelty/gin.singleton.constructor = @RNDNoveltyProxy

proxy = @proxy/gin.singleton()
novelty_proxy = @novelty/gin.singleton()

target_weight = 1.0
novelty_weight = 1.0
ComposedProxy.weight_dict = {
    'target': %target_weight,
    'novelty': %novelty_weight,
}
ComposedProxy.proxies_dict = {
    'target': %proxy,
    'novelty': %novelty_proxy
}
ComposedProxy.aggregation = 'sum'

NumScaffoldsFound.proxy_component_name = 'target'
TanimotoSimilarityModes.term_name = 'target'
RewardPrioritizedReplayBuffer.proxy_term = 'target'

train_proxy/gin.singleton.constructor = @ComposedProxy
train_proxy = @train_proxy/gin.singleton()
